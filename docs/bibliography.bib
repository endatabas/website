
@article{10.14778/3415478.3415534,
author = {Liu, Zhen Hua and Hammerschmidt, Beda and McMahon, Doug and Chang, Hui and Lu, Ying and Spiegel, Josh and Sosa, Alfonso Colunga and Suresh, Srikrishnan and Arora, Geeta and Arora, Vikas},
title = {Native JSON Datatype Support: Maturing SQL and NoSQL Convergence in Oracle Database},
year = {2020},
issue_date = {August 2020},
publisher = {VLDB Endowment},
volume = {13},
number = {12},
issn = {2150-8097},
url = {https://doi.org/10.14778/3415478.3415534},
doi = {10.14778/3415478.3415534},
abstract = {Both RDBMS and NoSQL database vendors have added varying degrees of support for storing and processing JSON data. Some vendors store JSON directly as text while others add new JSON type systems backed by binary encoding formats. The latter option is increasingly popular as it enables richer type systems and efficient query processing. In this paper, we present our new native JSON datatype and how it is fully integrated with the Oracle Database ecosystem to transform Oracle Database into a mature platform for serving both SQL and NoSQL style access paradigms. We show how our uniquely designed Oracle Binary JSON format (OSON) is able to speed up both OLAP and OLTP workloads over JSON documents.},
journal = {Proc. VLDB Endow.},
month = {sep},
pages = {3059–3071},
numpages = {13}
}

@inproceedings{10.1145/2588555.2595628,
author = {Liu, Zhen Hua and Hammerschmidt, Beda and McMahon, Doug},
title = {JSON Data Management: Supporting Schema-Less Development in RDBMS},
year = {2014},
isbn = {9781450323765},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2588555.2595628},
doi = {10.1145/2588555.2595628},
abstract = {Relational Database Management Systems (RDBMS) have been very successful at managing structured data with well-defined schemas. Despite this, relational systems are generally not the first choice for management of data where schemas are not pre-defined or must be flexible in the face of variations and changes. Instead, No-SQL database systems supporting JSON are often selected to provide persistence to such applications. JSON is a light-weight and flexible semi-structured data format supporting constructs common in most programming languages. In this paper, we analyze the way in which requirements differ between management of relational data and management of JSON data. We present three architectural principles that facilitate a schema-less development style within an RDBMS so that RDBMS users can store, query, and index JSON data without requiring schemas. We show how these three principles can be applied to industry-leading RDBMS platforms, such as the Oracle RDBMS Server, with relatively little effort. Consequently, an RDBMS can unify the management of both relational data and JSON data in one platform and use SQL with an embedded JSON path language as a single declarative language to query both relational data and JSON data. This SQL/JSON approach offers significant benefits to application developers as they can use one product to manage both relational data and semi-structured flexible schema data.},
booktitle = {Proceedings of the 2014 ACM SIGMOD International Conference on Management of Data},
pages = {1247–1258},
numpages = {12},
keywords = {JSON, no-SQL, schema-less, XML, SQL/XML, SQL/JSON},
location = {Snowbird, Utah, USA},
series = {SIGMOD '14}
}

@article{Petkovi2017SQLJSONSP,
  title={SQL/JSON Standard: Properties and Deficiencies},
  author={Du{\vs}an Petkovi{\'c}},
  journal={Datenbank-Spektrum},
  year={2017},
  volume={17},
  pages={277-287}
}

@article{Chamberlin2019ComparingSQLPlusPlusSQL2016,
  title = {Comparing Two SQL-Based Approaches for Querying JSON: SQL++ and SQL:2016},
  author = {Don Chamberlin},
  url = {https://info.couchbase.com/rs/302-GJY-034/images/Comparing_Two_SQL_Based_Approaches_WP.pdf}
}
